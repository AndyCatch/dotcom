let prevScrollpos=window.pageYOffset,isMobile=!1,menuClick=!1,options={rootMargin:"0px 0px",threshold:.99},observer=new IntersectionObserver(revealNav,options);var clock=setInterval("updateClock()",1e3),navChecker=setInterval("addNav()",200),observerChecker=setInterval("setUpObserver()",200),indexImageChecker=setInterval("indexImage()",200);function windowResize(){console.log("resize")}function indexImage(){let n=Array.from(document.querySelectorAll("div.index-items a"));for(let t=0;t<n.length;t++)if(n[t].addEventListener("mouseover",function(t){n.forEach(e=>{e.style.zIndex=0,t.currentTarget.style.zIndex=1})}),n[t].querySelectorAll("div.image-set")[t]){let e=Array.from(n[t].getElementsByClassName("image-set"));e.forEach(e=>{let t=e.getElementsByClassName("small")[0];var n=t.dataset.large;let o=new Image;o.classList.add("large"),o.src=n,e.appendChild(o),t.addEventListener("mouseover",function(e){o.style.opacity=1,o.style.zIndex=4}),t.addEventListener("mouseout",function(e){o.style.opacity=0,o.style.zIndex=3})})}clearInterval(indexImageChecker)}function addNav(){"undefined"!==document.querySelectorAll("div.navbar-inner")[0]&&(window.addEventListener("scroll",hideShowNav,{capture:!1,passive:!0}),clearInterval(navChecker))}function setUpObserver(){document.querySelectorAll(".footer-container").forEach(e=>{observer.observe(e)})}function setUpHamburger(){let e=document.getElementsByClassName("hamburger")[0];e&&e.addEventListener("click",menuToggle)}function revealNav(e,t){let n=document.querySelectorAll("div.navbar-inner")[0];e.forEach(e=>{e.isIntersecting&&.75<=e.intersectionRatio&&(console.log("entry.isIntersecting"),n.classList.remove("hideNav"),n.classList.add("showNav"))})}function updateClock(){if(luxon){let e=document.querySelectorAll(".footer-container .clock-container");e.forEach(e=>{let t=e.querySelector(".clock-style"),n=e.querySelector(".cityName");e=e.getAttribute("data-timezone");let o=luxon.DateTime.now().setZone(e);t.innerHTML=o.toFormat("HH:mm:ss");e=parseInt(o.toFormat("H"));9<=e&&e<=18&&n.classList.add("open")})}}function isThisMobile(){/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(isMobile=!0)}function showNav(e){e.classList.remove("hideNav"),e.classList.add("showNav")}function hideNav(e){e.classList.remove("showNav"),e.classList.add("hideNav")}function hideShowNav(e){var t=document.querySelectorAll("div.navbar-inner")[0],n=window.pageYOffset;"undefined"!=t&&((prevScrollpos>n||n<=0?showNav:hideNav)(t),prevScrollpos=n)}function menuChange(e){e?document.removeEventListener("scroll",hideShowNav,{capture:!1,passive:!1}):document.addEventListener("scroll",hideShowNav,{capture:!1,passive:!1})}function menuToggle(){menuClick=!menuClick,menuChange(menuClick)}function hasTouch(){return"ontouchstart"in document.documentElement||0<navigator.maxTouchPoints||0<navigator.msMaxTouchPoints}if(window.addEventListener("sempliceTransitionInDone",function(e){isProject()},!1),setUpHamburger(),window.addEventListener("load",e=>{console.log("Window loaded");let t=document.createElement("script");t.src="https://moment.github.io/luxon/global/luxon.min.js",document.body.appendChild(t)}),hasTouch())try{for(var si in document.styleSheets){var styleSheet=document.styleSheets[si];if(styleSheet.rules)for(var ri=styleSheet.rules.length-1;0<=ri;ri--)styleSheet.rules[ri].selectorText&&styleSheet.rules[ri].selectorText.match(":hover")&&styleSheet.deleteRule(ri)}}catch(e){}let vh=.01*window.innerHeight;function browserType(){let e=navigator.userAgent.toLowerCase();-1!=e.indexOf("safari")&&(-1<e.indexOf("chrome")?console.log("Browser type: Chrome"):console.log("Browser type: Safari"))}document.documentElement.style.setProperty("--vh",`${vh}px`),window.addEventListener("resize",()=>{var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh",`${e}px`)}),isThisMobile(),browserType(),hasTouch();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
